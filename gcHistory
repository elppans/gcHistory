#!/bin/bash

#TXT
  case $LANG in
   pt*) GCHMSG001="Não pode ser root!"
GCHMSG002="O path Wine já existe!"
GCHMSG003="Máquina virtual criada com sucesso..."
GCHMSG004="Falha ao criar a máquina virtual para o jogo!"
GCHMSG005="Deve escolher o instalador do Grand Chase History para ser instalado!"
GCHMSG006="O Grand Chase History já está instalado!"
GCHMSG007="A instalar o Grand Chase History..."
GCHMSG008="Durante a instalação, DESMARQUE a opção \"Criar um ícone na área de trabalho\"..."
GCHMSG009="Após a instalação, DESMARQUE a opção \"Executar Grand Chase History\"..."
GCHMSG010="Execute o jogo através do ícone criado no menú!"
GCHMSG011="Iniciando o instalador..."
GCHMSG012="Deve escolher o instalador do Grand Chase History para ser reinstalado!"
GCHMSG013="A preparar Backup do Grand Chase History..."
GCHMSG014="Copiando o Grand Chase History para o cache de Backup..."
GCHMSG015="O Backup foi criado com sucesso!"
GCHMSG016="O Backup não foi criado com sucesso!"
GCHMSG017="O Backup não foi criado com sucesso!"
GCHMSG018="A reinstalar o Grand Chase History..."
GCHMSG019="Durante a reinstalação, DESMARQUE a opção \"Criar um ícone na área de trabalho\"..."
GCHMSG020="Iniciando o instalador..."
GCHMSG021="Use a opção {-i|--install} para instalar o Grand Chase History!"
GCHMSG022="A excluir o Backup do Grand Chase History..."
GCHMSG023="O Backup não foi removido!"
GCHMSG024="O Backup foi removido com sucesso!"
GCHMSG025="A pasta de Backup do Grand Chase History não existe!"
GCHMSG026="Removendo a instalação atual do Grand Chase History..."
GCHMSG027="Restaurando o Backup..."
GCHMSG028="A restauração foi feita com sucesso..."
GCHMSG029="Removendo a pasta de Backup..."
GCHMSG030="A restauração foi quebrada!"
GCHMSG031="A restauração foi quebrada!"
GCHMSG032="Não existe backup a ser restaurado!"
GCHMSG033="O atalho para o Grand Chase History já existe..."
GCHMSG034="Deseja sobrescrever e atualizar o atalho para \"Grand Chase History\"? (s/N)"
GCHMSG035="Opção inválida!"
GCHMSG036="O atalho \"Grand Chase History\" será mantido!"
GCHMSG037="O atalho \"Grand Chase History\" foi atualizado..."
GCHMSG038="para acessar, acesse o menú do sistema, na categoria \"Game\"!"
GCHMSG039="Opção inválida, digite $0 {-h|--help} para mais informações!"
GCHMSG040="Atalho para o Grand Chase History criado com sucesso"
GCHMSG041="Acesse o Menú do sistema, na categoria \"Game\" para abrir o jogo!"
GCHMSG042="Falha ao criar o atalho Grand Chase History!"
GCHMSG043="O atalho do Grand Chase History não foi removido!"
GCHMSG044="O atalho do Grand Chase History foi removido com sucesso!"
GCHMSG045="O atalho para o Grand Chase History não existe ou já foi removido!"
GCHMSG046="O atalho do Grand Chase History Main não foi removido!"
GCHMSG047="O atalho do Grand Chase History Main foi removido com sucesso!"
GCHMSG048="O atalho para o Grand Chase History Main não existe ou já foi removido!"
GCHMSG049="O jogo Grand Chase History não foi removido com exito!"
GCHMSG050="O jogo Grand Chase History foi removido com sucesso!"
GCHMSG051="O jogo Grand Chase History não existe ou já foi removido!"
GCHMSG052="O jogo Grand Chase History depende da máquina virtual para rodar..."
GCHMSG053="Tem certeza que quer remover a máquina virtual?"
GCHMSG054="Digite uma das opções [Sim(S)|Não(N)] : "
GCHMSG055="A Máquina Virtual do \"Grand Chase History\" será mantido!"
GCHMSG056="Removendo a máquina virtual do Grand Chase History..."
GCHMSG057="A Máquina Virtual do \"Grand Chase History\" foi removido com exito!"
GCHMSG058="A Máquina Virtual do \"Grand Chase History\" não foi removido com sucesso!"
GCHMSG059="Opção inválida, digite $0 {-h|--help} para mais informações!"
GCHMSG060="A Máquina Virtual do \"Grand Chase History\" não existe ou já foi removido!"
GCHMSG061="Lendo informações do seu monitor:
"
GCHMSG062="
Informe a resolução desejada para a Área de trabalho Virtual..."
GCHMSG063="Se omitido, será configurado para "1280x1024"..."
GCHMSG064="Para desativar a àrea de Trabalho Virtual, digite "off" no lugar da resolução.
"
GCHMSG065="Resolução do Monitor Virtual [ "off" para desativado ] : "
GCHMSG066="Listando resoluções suportadas do monitor..."
GCHMSG067='
gcHistory, um aplicativo CLI para ajudar a jogar Grand Chase History em sistemas "não nativos" de sua origem.
Uso: gcHistory [OPÇÃO]... [EXE]...

Argumentos obrigatórios para opções longas também o são para as opções curtas.

	Se omitido, iniciará o jogo via Launcher!


  -h,   --help                         Emite esta ajuda
  -d,   --debug                        Executa o jogo em DEBUG MODE
  -i,   --install {Instalador.exe}     Instala o jogo em seu Usuário Atual
  -ri,  --reinstall  {Instalador.exe}  Faz um Backup do jogo instalado e reinstala por cima
  -rb,  --remove-backup                Remove o Backup criado ao reinstalar o jogo
  -re,  --restore-backup               Remove o jogo reinstalado e restaura o Backup no lugar
  -f,   --fix, --fix-shortcuts         Instala/atualiza um atalho do Launcher e Main no menú do sistema
  -rs,  --remove-shortcuts             Remove o atalho do Launcher e do Main do menú do sistema
  -rg,  --remove-game                  Remove o jogo por completo de seu Usuário Atual
  -wt,  --winetricks                   Abre o configurador Winetricks em modo GUI
  -xt,  --xterm                        Abre o Terminal XTERM usando a máquina virtual do Grand Chase History.
  -mcl,  --monitor-config-list         Lista resoluções suportadas do monitor para usar no jogo
  -mcs,  --monitor-config-set          Carrega o jogo com a resolução definida [ Ao sair do jogo retorna a resolução anterior ]
  -cvm, --create-virtual-machine       Cria a Máquina Virtual do Wine para que possa instalar e jogar o Grand Chase History
  -rvm, --remove-virtual-machine       Remove a Máquina Virtual do Wine de forma recursiva. [Cuidado ao usar esta opção]
  -svd, --set-virtual-desktop          Ativa o Desktop Virtual do Wine e configura sua resolução [ off para desativar ]
  -V,  --version                       Mostra a versão do Wine usado e sai

  Alguns Exemplos:

  Instalar o jogo Grand Chase History

  gcHistory -i /caminho/setup.exe

  Apenas executar o jogo:

  gcHistory

  Listar resolução suportada do monitor:

  gcHistory -mcl

  Executar o jogo com uma resolução suportada definida, para o exemplo 1280x720:

  Se setar resolução errada, o jogo é executado sem setar a configuração definida
  A resolução do jogo deve ser EXATAMENTE o mesmo que a resolução escolhida.
  Se omitido, será setado automaticamente para a resolução 1680x1050


  gcHistory -mcs 1280x720

'
GCHMSG068="Erro ao completar o comando...
Digite "$0" {-h|--help} para mais informações!"
 ;;
   *) GCMSG001=

 ;;
  esac
#TXT

if [ `id -u` = 0 ];then
	echo "$GCHMSG001"
	exit
fi

# Monitor Auto SET [ 0 = OFF | 1 = ON ]
XMONCFG=0

RLSET=`readlink -m "$2"`

INSTDIR=`dirname $0`

cd $INSTDIR 
PWDIR=`pwd`

WINEX=wine

WINDIR="$PWDIR/bin"
WINLIB="$PWDIR/lib"
#WINLIB64="$PWDIR/lib64"
GCPMD="$PWDIR/gcmd"
GCPATH="$PWDIR/gchmod"
GCS32="$PWDIR/gchmod/drive_c/windows/system32"
GCDIR="$GCPATH/drive_c/Program Files/Grand Chase History"
GCEXEC="$GCDIR/GrandChase.exe"
GCMEXEC="$GCDIR/main.exe"
WININST=`readlink -m "$0"`


export PATH="$WINDIR:$PATH"
export LD_LIBRARY_PATH="$WINLIB:$LD_LIBRARY_PATH"
#export LD_LIBRARY_PATH="$WINLIB64:$LD_LIBRARY_PATH"
export WINEARCH="win32"
#export WINEARCH="win64"
EXDLL="wmp=n;quartz=n;wmvcore=n;winegstreamer=;devenum=b"

if ( whereis rsync | grep bin ) >> /dev/null ; then
	CPYNC="rsync -dhar --info=progress2"
  else
	CPYNC="cp -u -a -f"
fi

if [ -z "$1" ];then
	[ "$XMONCFG" = 1 ] && \
 {
	bash "$0" -mcs
	exit 0
 }
	export WINEDLLOVERRIDES="$EXDLL"
	export WINEDEBUG="fixme-all,err-all,warn+cursor,-all"
	cd "$GCDIR"
	WINEPREFIX="$GCPATH" "$WINEX" "$GCEXEC"
   else
 case "$1" in
	-cvm|--create-virtual-machine)
	export WINEDEBUG="fixme-all,err-all,warn+cursor,-all"
if [ -d "$GCPATH" ];then
	echo "$GCHMSG002"
	exit 0
   else
	WINEPREFIX="$GCPATH" winepath
	WINEPREFIX="$GCPATH" winetricks winxp --optout
	#WINEPREFIX="$GCPATH" wine regsvr32 $GCDIR/mailmime.dll (mfc42 = dll dinâmico)
	WINEPREFIX="$GCPATH" winetricks -q dotnet40 --optout

	WINEPREFIX="$GCPATH" winetricks -q mfc42 --optout
	WINEPREFIX="$GCPATH" winetricks -q vcrun6 --optout
	WINEPREFIX="$GCPATH" winetricks -q wmv9vcm --optout
	WINEPREFIX="$GCPATH" winetricks -q quartz --optout

	#WINEPREFIX="$GCPATH" winetricks --force -q dotnet45 --optout
	WINEPREFIX="$GCPATH" winetricks --force -q wmp9 --optout
	WINEPREFIX="$GCPATH" winetricks --force -q allfonts --optout
	#WINEPREFIX="$GCPATH" winetricks -q vcrun2015 --optout
	WINEPREFIX="$GCPATH" winetricks --force win7 --optout
	[ -d $GCS32 ] && \
			{
		$CPYNC "$GCS32/quartz.dll" "$GCS32/quartz.dll.old"; # Acertar
		$CPYNC "$GCS32/quartz.dll" "$GCPMD/quartz.dll"; # Acertar
			}
  if [ -d "$GCPATH" ];then
	echo "$GCHMSG003"
	read -t 5
     else
	echo "$GCHMSG004"
	exit 0
  fi
fi
	exit 0
  ;;
	-d|--debug)
	export WINEDLLOVERRIDES="$EXDLL"
	export WINEDEBUG=""
	cd "$GCDIR"
	WINEPREFIX="$GCPATH" "$WINEX" "$GCEXEC"
  ;;
	-i|--install)
   if [ -z "$2" ];then
	echo "$GCHMSG005"
	exit 0
   fi
	if [ -d "$GCDIR" ];then
	echo "$GCHMSG006"
	exit 0
		else
	clear
	echo "$GCHMSG007"
	read -t 2
	echo "$GCHMSG008"
	read -t 3
	echo "$GCHMSG009"
	read -t 3
	echo "$GCHMSG010"
	read -t 5
	echo "$GCHMSG011"
	read -t 3
	export WINEDEBUG="fixme-all,err-all,warn-cursor,-all"
	mkdir -p $GCPATH
	WINEPREFIX="$GCPATH" "$WINEX" "$RLSET"
	#$CPYNC "$GCDIR/NewOption.dat" "$GCDIR/NewOption.dat.old"
	$CPYNC "$PWDIR/gcmd/NewOption.dat" "$GCDIR"
	[ -d "$HOME/.local/share/applications/wine/Programs/Grand Chase History" ] && \
			{
		rm -rf "$HOME/.local/share/applications/wine/Programs/Grand Chase History" >> /dev/null
			}
    if [ -d "$GCDIR" ];then
	bash "$0" --fix-shortcuts 
    fi
	fi
  ;;
	-ri|--reinstall)
   if [ -z "$2" ];then
	echo "$GCHMSG012"
	exit 0
   fi
	if [ -d "$GCDIR" ];then
	echo "$GCHMSG013"
	read -t 3
	mkdir -p "$GCPATH/gch_bkp"
	GCHBKP="$GCPATH/gch_bkp"
	echo "$GCHMSG014"
	$CPYNC "$GCDIR" "$GCHBKP"
	GCHBKPB="$GCHBKP/Grand Chase History"
  if [ -d "$GCHBKPB" ];then
	GCHD=`du -s "$GCDIR" | cut -d "/" -f "1"`
	GCHB=`du -s "$GCHBKPB" | cut -d "/" -f "1"`
   if [ "$GCHD" -eq "$GCHB" ];then
	echo "$GCHMSG015"
	read -t 3
                else
	echo "$GCHMSG016"
	exit 0
   fi
    else
	echo "$GCHMSG017"
	exit 0
  fi
	echo "$GCHMSG018"
	read -t 2
	echo "$GCHMSG019"
	read -t 5
	echo "$GCHMSG020"
	read -t 3
	export WINEDEBUG="fixme-all,err-all,warn-cursor,-all"
	mkdir -p $GCPATH
	WINEPREFIX="$GCPATH" "$WINEX" "$RLSET"
	$CPYNC "$PWDIR/gcmd/NewOption.dat" "$GCDIR"
	[ -d "$HOME/.local/share/applications/wine/Programs/Grand Chase History" ] && \
			{
		rm -rf "$HOME/.local/share/applications/wine/Programs/Grand Chase History" >> /dev/null
			}
    if [ -d "$GCDIR" ];then
	bash "$0" --fix-shortcuts 
    fi
		else
	echo "$GCHMSG021"
	exit 0
	fi
  ;;
	-rb|--remove-backup)
    GCHBKP="$GCPATH/gch_bkp"
    GCHBKPB="$GCHBKP/Grand Chase History"
if [ -d "$GCHBKPB" ];then
	echo "$GCHMSG022"
	rm -R -f "$GCHBKPB"
  if [ -d "$GCHBKPB" ];then
	echo "$GCHMSG023"
	exit 0
		else
	echo "$GCHMSG024"
	exit 0
  fi
    else
	echo "$GCHMSG025"
	exit 0
fi
  ;;
	-re|--restore-backup)
    GCHBKP="$GCPATH/gch_bkp"
    GCHBKPB="$GCHBKP/Grand Chase History"
if [ -d "$GCHBKPB" ];then
	echo "$GCHMSG026"
	read -t 3
	rm -R -f $GCDIR
	echo "$GCHMSG027"
	$CPYNC "$GCHBKP" "$GCDIR"
  if [ -d "$GCDIR" ];then
	GCHD=`du -s "$GCDIR" | cut -d "/" -f "1"`
	GCHB=`du -s "$GCHBKPB" | cut -d "/" -f "1"`
   if [ "$GCHD" -eq "$GCHB" ];then
	echo "$GCHMSG028"
	read -t 3
	echo "$GCHMSG029"
	rm -R -f $GCHBKPB
                else
	echo "$GCHMSG030"
	exit 0
   fi
    else
	echo "$GCHMSG031"
	exit 0
  fi
	else
	echo "$GCHMSG032"
	exit
fi
  ;;
	-f|--fix|--fix-shortcuts)
    SCAPP="$HOME/.local/share/applications"

if [ -e "$SCAPP/GrandChaseHistory.desktop" ];then
##SHORT=Y
if [ -z "$2" ];then
###SHORTGC
	echo "$GCHMSG033"
	read -p "$GCHMSG034" SHORTGC
  if [ -z $SHORTGC ];then
	SHORTGC="N"
  fi
###SHORTGC
else
 if [ "$2" = "-y" ];then

	SHORTGC="Y"
     else
  if [ "$2" = "-Y" ];then
	SHORTGC="Y"
    else
	echo "$GCHMSG035"
	exit 0
  fi
 fi
fi
##SHORT=Y
  case $SHORTGC in
		n|N|no|No|NO|nO|não|Não|nÂo|nãO)
	echo "$GCHMSG036"
	sleep 3
		;;
		s|S|y|Y|yes|Yes|yEs|yeS|sim|Sim|sIm|siM)
	rm -rf "$SCAPP/GrandChaseHistory.desktop"
	touch "$SCAPP/GrandChaseHistory.desktop"
	echo -e "[Desktop Entry]" >> "$SCAPP/GrandChaseHistory.desktop"
	echo -e "Encoding=UTF-8" >> "$SCAPP/GrandChaseHistory.desktop"
	echo -e "Name="Grand Chase History"" >> "$SCAPP/GrandChaseHistory.desktop"
	echo -e "Comment="Grand Chase History on Linux"" >> "$SCAPP/GrandChaseHistory.desktop"
	echo -e "Type=Application" >> "$SCAPP/GrandChaseHistory.desktop"
	echo "Exec=$WININST" >> "$SCAPP/GrandChaseHistory.desktop"
	echo "Icon="$PWDIR/ico/GrandChase"" >> "$SCAPP/GrandChaseHistory.desktop"
	echo -e "Name[fr_FR]=GrandChase" >> "$SCAPP/GrandChaseHistory.desktop"
	echo -e "Terminal=OFF" >> "$SCAPP/GrandChaseHistory.desktop"
	echo -e "Categories=Game;" >> "$SCAPP/GrandChaseHistory.desktop"
	chmod +x "$SCAPP/GrandChaseHistory.desktop"
	echo "$GCHMSG037"
	echo "$GCHMSG038"
	read -t 3
		;;
		*)
	echo "$GCHMSG039"
	exit 0
		;;
  esac
   else
	touch "$SCAPP/GrandChaseHistory.desktop"
	echo -e "[Desktop Entry]" >> "$SCAPP/GrandChaseHistory.desktop"
	echo -e "Encoding=UTF-8" >> "$SCAPP/GrandChaseHistory.desktop"
	echo -e "Name="Grand Chase History"" >> "$SCAPP/GrandChaseHistory.desktop"
	echo -e "Comment="Grand Chase History on Linux"" >> "$SCAPP/GrandChaseHistory.desktop"
	echo -e "Type=Application" >> "$SCAPP/GrandChaseHistory.desktop"
	echo "Exec=$WININST" >> "$SCAPP/GrandChaseHistory.desktop"
	echo "Icon="$PWDIR/ico/GrandChase"" >> "$SCAPP/GrandChaseHistory.desktop"
	echo -e "Name[fr_FR]=GrandChase" >> "$SCAPP/GrandChaseHistory.desktop"
	echo -e "Terminal=OFF" >> "$SCAPP/GrandChaseHistory.desktop"
	echo -e "Categories=Game;" >> "$SCAPP/GrandChaseHistory.desktop"
	chmod +x "$SCAPP/GrandChaseHistory.desktop"

 if [ -e "$SCAPP/GrandChaseHistory.desktop" ];then
	echo "$GCHMSG040"
	echo "$GCHMSG041"
   else
	echo "$GCHMSG042"
	exit 0
 fi

fi
	exit 0
  ;;
	-rs|--remove-shortcuts)
    SCAPP="$HOME/.local/share/applications"
if [ -e "$SCAPP/GrandChaseHistory.desktop" ];then
	rm -rf "$SCAPP/GrandChaseHistory.desktop"
  if [ -e "$SCAPP/GrandChaseHistory.desktop" ];then
	echo "$GCHMSG043"
	exit 0
     else
	echo "$GCHMSG044"
  fi
   else
	echo "$GCHMSG045"
	exit 0
fi

if [ -e "$SCAPP/GrandChaseHistoryMain.desktop" ];then
	rm -rf "$SCAPP/GrandChaseHistoryMain.desktop"
  if [ -e "$SCAPP/GrandChaseHistoryMain.desktop" ];then
	echo "$GCHMSG046"
	exit 0
     else
	echo "$GCHMSG047"
  fi
   else
	echo "$GCHMSG048"
	exit 0
fi
	exit 0
  ;;
	-rg|--remove-game)
if [ -d "$GCDIR" ];then
	rm -rf "$GCDIR"
 if [ -d "$GCDIR" ];then
	echo "$GCHMSG049"
	exit 0
    else
	echo "$GCHMSG050"
	bash "$0" --remove-shortcuts
 fi
   else
	echo "$GCHMSG051"
	exit 0
fi
  ;;
	-rvm|--remove-virtual-machine)
if [ -d "$GCPATH" ];then
	echo "$GCHMSG052"
	echo "$GCHMSG053"
	read -p "$GCHMSG054" GCRVM
   case $GCRVM in
		n|N|no|No|NO|nO|não|Não|nÂo|nãO)
	echo "$GCHMSG055"
	sleep 3
		;;
		s|S|y|Y|yes|Yes|yEs|yeS|sim|Sim|sIm|siM)
	echo "$GCHMSG056"
	read -t 3
	rm -rf "$GCPATH"
 if [ -d "$GCPATH" ];then
	echo "$GCHMSG057"
	exit 0
    else
	echo "$GCHMSG058"
 fi
		;;
		*)
	echo "$GCHMSG059"
	exit 0
		;;
esac
   else
	echo "$GCHMSG060"
	exit 0
fi
  ;;
  	-wt|--winetricks)
	WINEPREFIX="$GCPATH" winetricks
  ;;
	-xt|--xterm)
	WINEPREFIX="$GCPATH" xterm
  ;;
	-svd|--set-virtual-desktop)
	clear

	VIRTDESKDIM="$2"

	echo "$GCHMSG061"

	read -t 3

	WINEPREFIX="$GCPATH" xrandr

	read -t 3

	echo "$GCHMSG062"
	echo "$GCHMSG063"
	echo "$GCHMSG064"
	read -p "$GCHMSG065" VIRTDESKDIM

if [ -z "$VIRTDESKDIM" ];then
	WINEPREFIX="$GCPATH" winetricks vd=off
	read -t 3
	WINEPREFIX="$GCPATH" winetricks vd="1280x1024"
	exit 0
 else
  if [ "$VIRTDESKDIM" = "off" ];then
	WINEPREFIX="$GCPATH" winetricks vd=off
	exit 0
   else
	WINEPREFIX="$GCPATH" winetricks vd="$VIRTDESKDIM"
	exit 0
  fi
fi

  ;;
	-mcl|--monitor-config-list)
	echo "$GCHMSG066"
	xrandr --q1
	exit 0
  ;;
	-mcs|--monitor-config-set)
XYCFG=$2
XCFG00=1680x1050
XCFG01=`xrandr|awk 'BEGIN {} /^.*\*/{printf("%s;", $1)} END {}' | cut -d ";" -f "1"`

echo "$XCFG01" > "$GCPMD/xmon.cfg"

if [ -z "$XYCFG" ] ; then

DEFAULT=$(xrandr|awk 'BEGIN {} /^.*primary/{printf("%s;", $1)} END {}' | cut -d ";" -f "1" )
xrandr --output $DEFAULT --mode "$XCFG00"

	export WINEDLLOVERRIDES="$EXDLL"
	export WINEDEBUG="fixme-all,err-all,warn+cursor,-all"
	cd "$GCDIR"
	WINEPREFIX="$GCPATH" "$WINEX" "$GCEXEC"
xrandr --output $DEFAULT --mode `cat $GCPMD/xmon.cfg`

else

DEFAULT=$(xrandr|awk 'BEGIN {} /^.*primary/{printf("%s;", $1)} END {}' | cut -d ";" -f "1" )
xrandr --output $DEFAULT --mode "$XYCFG"

	export WINEDLLOVERRIDES="$EXDLL"
	export WINEDEBUG="fixme-all,err-all,warn+cursor,-all"
	cd "$GCDIR"
	WINEPREFIX="$GCPATH" "$WINEX" "$GCEXEC"
	read -t 30

xrandr --output $DEFAULT --mode `cat "$GCPMD"/xmon.cfg`

fi
  ;;
	-V|--version)
	"$WINEX" --version
	exit 0
  ;;
	-h|--help)
	echo "$GCHMSG067"
	exit 0
  ;;
	*)
	echo "$GCHMSG068"
	exit 0
	;;
 esac
fi
